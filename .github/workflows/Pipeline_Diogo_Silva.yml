name: CI Pipeline

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  static-analysis:
    name: An√°lise Est√°tica
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do C√≥digo
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Instalar depend√™ncias
        run: |
          python -m pip install --upgrade pip
          pip install pylint flake8

      - name: Executar Pylint
        run: |
          pylint $(git ls-files '*.py') | tee pylint-report.txt || true

      - name: Executar Flake8
        run: |
          flake8 --statistics --count --exit-zero . | tee flake8-report.txt || true

      - name: Verificar m√©tricas e definir status
        run: |
          ERROS=$(flake8 --count . --max-line-length=120)
          echo "N√∫mero de erros do flake8: $ERROS"
          if [ "$ERROS" -gt 50 ]; then
            echo "Erro cr√≠tico: C√≥digo tem demasiadas falhas! üö®"
            exit 1
          elif [ "$ERROS" -gt 10 ]; then
            echo "Aviso: C√≥digo tem algumas falhas. ‚ö†Ô∏è"
            exit 0
          else
            echo "Sucesso: C√≥digo limpo! ‚úÖ"
            exit 0
          fi

      - name: Guardar Relat√≥rios de An√°lise Est√°tica
        uses: actions/upload-artifact@v4
        with:
          name: static-analysis-reports
          path: |
            pylint-report.txt
            flake8-report.txt

  dynamic-analysis:
    name: An√°lise Din√¢mica
    runs-on: ubuntu-latest
    needs: static-analysis

    steps:
      - name: Checkout do C√≥digo
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Instalar depend√™ncias
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Executar Testes
        run: |
          pytest --maxfail=5 --disable-warnings | tee test-report.txt || true

      - name: Analisar Resultados dos Testes
        run: |
          FALHAS=$(grep -o "FAILED" test-report.txt | wc -l)
          if [ "$FALHAS" -gt 0 ]; then
            echo "Erro: Alguns testes falharam! üö®"
            exit 1
          else
            echo "Todos os testes passaram! ‚úÖ"
            exit 0
          fi

      - name: Guardar Relat√≥rio de Testes
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test-report.txt
